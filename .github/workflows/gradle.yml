# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main","sheel-dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    #- name: Make gradlew executable
    #  run: chmod +x gradlew
    - name: Build with Gradle Wrapper

      run:  ./gradlew build -x checkstyleMain test


    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    #- name: Publish to GitHub Packages
    #  run: ./gradlew publish
    #  env:
    #    USERNAME: ${{ github.actor }}
    #    TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file backend/Dockerfile --tag sheelprabhakar/society-management:latest
    # run: docker build . --file backend/Dockerfile --tag sheelprabhakar/society-management:$(date +%s)
